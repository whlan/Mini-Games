package MainPackage;

//file: FrmColorClick.java
//author: Benjamin Mai, Rigo Maldonado, Wei-Hao Lan
//class: CS 2450.01 â€“ Programming Graphical User Interfaces
//assignment: Swing Project V1.3
//date last modified: 9/21/19
//purpose: This game involves the user to click on buttons that correspond to the visual "colored" colors, and there are 5 rounds 
//until the game ends and the score is determined!

import javax.swing.*;
import java.awt.*;
import java.io.IOException;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;


public class FrmColorClick extends javax.swing.JFrame {
    private final String[] COLORS = {"Blue", "Green", "Purple", "Red", "Yellow"};
    private static int round=1;
    /**
     * Creates new form FrmColorClick
     */
    public FrmColorClick() {
        initComponents();
        txtRound.setText(round+"");
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtColor = new java.awt.Label();
        btnBack = new java.awt.Button();
        txtScore = new java.awt.Label();
        txtRound = new java.awt.Label();
        lblRound = new java.awt.Label();
        lblRound1 = new java.awt.Label();
        redCircleBtn = new javax.swing.JButton();
        yellowCircleBtn = new javax.swing.JButton();
        greenCircleBtn = new javax.swing.JButton();
        blueCircleBtn = new javax.swing.JButton();
        purpleCircleBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtColor.setAlignment(java.awt.Label.CENTER);
        txtColor.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        txtColor.setText("Color");

        btnBack.setLabel("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        txtScore.setCursor(new java.awt.Cursor(java.awt.Cursor.SE_RESIZE_CURSOR));
        txtScore.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        txtScore.setText("0");

        txtRound.setAlignment(java.awt.Label.CENTER);
        txtRound.setCursor(new java.awt.Cursor(java.awt.Cursor.SE_RESIZE_CURSOR));
        txtRound.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        txtRound.setText("0");

        lblRound.setAlignment(java.awt.Label.CENTER);
        lblRound.setCursor(new java.awt.Cursor(java.awt.Cursor.SE_RESIZE_CURSOR));
        lblRound.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        lblRound.setText("Round:");

        lblRound1.setAlignment(java.awt.Label.CENTER);
        lblRound1.setCursor(new java.awt.Cursor(java.awt.Cursor.SE_RESIZE_CURSOR));
        lblRound1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        lblRound1.setText("Score:");

        redCircleBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/red.png"))); // NOI18N
        redCircleBtn.setToolTipText("Click to select");
        redCircleBtn.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                redCircleBtnFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                redCircleBtnFocusLost(evt);
            }
        });
        redCircleBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                redCircleBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                redCircleBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                redCircleBtnMouseExited(evt);
            }
        });
        redCircleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redCircleBtnActionPerformed(evt);
            }
        });

        yellowCircleBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/yellow.png"))); // NOI18N
        yellowCircleBtn.setToolTipText("Click to select");
        yellowCircleBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                yellowCircleBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                yellowCircleBtnMouseExited(evt);
            }
        });
        yellowCircleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yellowCircleBtnActionPerformed(evt);
            }
        });

        greenCircleBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/green.png"))); // NOI18N
        greenCircleBtn.setToolTipText("Click to select");
        greenCircleBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                greenCircleBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                greenCircleBtnMouseExited(evt);
            }
        });
        greenCircleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                greenCircleBtnActionPerformed(evt);
            }
        });

        blueCircleBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/blue.png"))); // NOI18N
        blueCircleBtn.setToolTipText("Click to select");
        blueCircleBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                blueCircleBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                blueCircleBtnMouseExited(evt);
            }
        });
        blueCircleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blueCircleBtnActionPerformed(evt);
            }
        });

        purpleCircleBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/purple.png"))); // NOI18N
        purpleCircleBtn.setToolTipText("Click to select");
        purpleCircleBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                purpleCircleBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                purpleCircleBtnMouseExited(evt);
            }
        });
        purpleCircleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purpleCircleBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(redCircleBtn)
                    .addComponent(blueCircleBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblRound1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtScore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(txtColor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(yellowCircleBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(lblRound, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtRound, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(greenCircleBtn)
                    .addComponent(purpleCircleBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(redCircleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yellowCircleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(greenCircleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(blueCircleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtRound, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblRound, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)
                        .addComponent(txtColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtScore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblRound1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(purpleCircleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.setVisible(false);
        MainApp.menu.setVisible(true);
        MainApp.runCircleClick = false;
        round = 1;
        
    }//GEN-LAST:event_btnBackActionPerformed

    private void redCircleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redCircleBtnActionPerformed
        clickColor(Color.RED);
    }//GEN-LAST:event_redCircleBtnActionPerformed

    private void yellowCircleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yellowCircleBtnActionPerformed
        clickColor(Color.YELLOW);
    }//GEN-LAST:event_yellowCircleBtnActionPerformed

    private void greenCircleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_greenCircleBtnActionPerformed
        clickColor(Color.GREEN);
    }//GEN-LAST:event_greenCircleBtnActionPerformed

    private void blueCircleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blueCircleBtnActionPerformed
        clickColor(Color.BLUE);
    }//GEN-LAST:event_blueCircleBtnActionPerformed

    private void purpleCircleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purpleCircleBtnActionPerformed
        clickColor(Color.MAGENTA);
    }//GEN-LAST:event_purpleCircleBtnActionPerformed

    private void redCircleBtnFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_redCircleBtnFocusGained
        
    }//GEN-LAST:event_redCircleBtnFocusGained

    private void redCircleBtnFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_redCircleBtnFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_redCircleBtnFocusLost

    private void redCircleBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_redCircleBtnMouseClicked
        
    }//GEN-LAST:event_redCircleBtnMouseClicked

    private void redCircleBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_redCircleBtnMouseExited
        redCircleBtn.setBackground(UIManager.getColor("control"));
    }//GEN-LAST:event_redCircleBtnMouseExited

    private void redCircleBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_redCircleBtnMouseEntered
        redCircleBtn.setBackground(Color.RED);
    }//GEN-LAST:event_redCircleBtnMouseEntered

    private void yellowCircleBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_yellowCircleBtnMouseEntered
        yellowCircleBtn.setBackground(Color.YELLOW);
    }//GEN-LAST:event_yellowCircleBtnMouseEntered

    private void yellowCircleBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_yellowCircleBtnMouseExited
        yellowCircleBtn.setBackground(UIManager.getColor("control"));
    }//GEN-LAST:event_yellowCircleBtnMouseExited

    private void greenCircleBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_greenCircleBtnMouseEntered
        greenCircleBtn.setBackground(Color.GREEN);
    }//GEN-LAST:event_greenCircleBtnMouseEntered

    private void greenCircleBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_greenCircleBtnMouseExited
        greenCircleBtn.setBackground(UIManager.getColor("control"));
    }//GEN-LAST:event_greenCircleBtnMouseExited

    private void blueCircleBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_blueCircleBtnMouseEntered
        blueCircleBtn.setBackground(Color.BLUE);
    }//GEN-LAST:event_blueCircleBtnMouseEntered

    private void blueCircleBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_blueCircleBtnMouseExited
        blueCircleBtn.setBackground(UIManager.getColor("control"));
    }//GEN-LAST:event_blueCircleBtnMouseExited

    private void purpleCircleBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_purpleCircleBtnMouseEntered
        purpleCircleBtn.setBackground(Color.MAGENTA);
    }//GEN-LAST:event_purpleCircleBtnMouseEntered

    private void purpleCircleBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_purpleCircleBtnMouseExited
        purpleCircleBtn.setBackground(UIManager.getColor("control"));
    }//GEN-LAST:event_purpleCircleBtnMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmColorClick.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmColorClick.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmColorClick.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmColorClick.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmColorClick().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton blueCircleBtn;
    private java.awt.Button btnBack;
    private javax.swing.JButton greenCircleBtn;
    private java.awt.Label lblRound;
    private java.awt.Label lblRound1;
    private javax.swing.JButton purpleCircleBtn;
    private javax.swing.JButton redCircleBtn;
    private java.awt.Label txtColor;
    private java.awt.Label txtRound;
    private java.awt.Label txtScore;
    private javax.swing.JButton yellowCircleBtn;
    // End of variables declaration//GEN-END:variables

    private Color assignColor() {
        int randomValue = (int)(Math.random()*5);
        System.out.println(randomValue);
        Color result = Color.BLACK;
        switch (randomValue) {
            case 0:
                result = Color.BLUE;
                break;
            case 1:
                result = Color.RED;
                break;
            case 2:
                result = Color.YELLOW;
                break;
            case 3:
                result = Color.MAGENTA;
                break;
            case 4:
                result = Color.GREEN;
                break;
        }
        return result;
    }

    private void randomColors() {
        int index = (int)(Math.random()*5);
        txtColor.setForeground(assignColor());
        txtColor.setText(COLORS[index]);
    }

    public void run() {
            round++;
            if (round>5) {
               
                    int score = Integer.parseInt(txtScore.getText());
                    int totalScore = FrmHangMan.totalScore(score);    //add to the scores
                    JOptionPane.showMessageDialog(null, "Game has finished\n"+MainApp.initials+": Your score: " + txtScore.getText());
                    MainApp.runCircleClick = false;
                    this.setVisible(false);
                    this.dispose();
                    MainApp.frmSudoku.setVisible(true);
            } else{
                txtRound.setText(round+"");
            }     
    randomColors();
    }

    private void clickColor(Color color) {
        if (txtColor.getForeground().equals(color)) {
            txtScore.setText(""+(Integer.parseInt(txtScore.getText())+100));
        }
        run();
    }
    public void start(){
        MainApp.runCircleClick = true;
        round = 1;
        txtRound.setText("1");
        txtScore.setText("0");
        randomColors();
    }
    
    
}
